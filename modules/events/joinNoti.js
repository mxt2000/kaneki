module.exports.config = {
	name: "joinNoti",
	eventType: ["log:subscribe"],
	version: "1.0.1",
	credits: "Binee",
	description: "Th√¥ng b√°o bot ho·∫∑c ng∆∞·ªùi v√†o nh√≥m c√≥ random gif/·∫£nh/video",
	dependencies: {
		"fs-extra": "",
		"path": "",
		"pidusage": ""
	}
};

module.exports.onLoad = function () {
    const { existsSync, mkdirSync } = global.nodemodule["fs-extra"];
    const { join } = global.nodemodule["path"];

	const path = join(__dirname, "cache", "joinMp4");
	if (existsSync(path)) mkdirSync(path, { recursive: true });	

	const path2 = join(__dirname, "cache", "joinMp4", "hi.mp4");
    if (!existsSync(path2)) mkdirSync(path2, { recursive: true });

    return;
}
module.exports.run = async function({ api, event }) {
	const { join } = global.nodemodule["path"];
	const { threadID } = event;
	if (event.logMessageData.addedParticipants.some(i => i.userFbId == api.getCurrentUserID())) {
		api.changeNickname(`[ ${global.config.PREFIX} ] ‚Ä¢ ${(!global.config.BOTNAME) ? "Bot Kaneki" : global.config.BOTNAME}`, threadID, api.getCurrentUserID());
		const fs = require("fs");
		return api.sendMessage("", event.threadID, () => api.sendMessage({body:`ùêµùëúùë° ùê∂ùë¢ùë°ùëí ùëàùë§ùëà üòò\n----------------------\nƒê√£ K·∫øt n·ªëi N·ªëi Th√†nh C√¥ng ‚úÖ\n----------------------\nVui l√≤ng s·ª≠ d·ª•ng l·ªánh: /menu ƒë·ªÉ bi·∫øt to√†n b·ªô s·ªë l·ªánh trong h·ªá th·ªëng.\nC·∫£m ƒë√£ s·ª≠ d·ª•ng bot c·ªßa ùëáùêæùê∑ ùëÅùëíùë£ùëíùëüùëëùëñùëí.\nAdminBot Fb : https://www.facebook.com/User.AdminTKD`, attachment: fs.createReadStream(__dirname + "/cache/joinMp4/hi.mp4")} ,threadID));
	}
	else {
		try {
			const { createReadStream, existsSync, mkdirSync, readdirSync } = global.nodemodule["fs-extra"];
			let { threadName, participantIDs } = await api.getThreadInfo(threadID);

			const threadData = global.data.threadData.get(parseInt(threadID)) || {};
			const path = join(__dirname, "cache", "joinMp4");
			const pathGif = join(path, `${threadID}.mp4`);

			var mentions = [], nameArray = [], memLength = [], i = 0;
			
			for (id in event.logMessageData.addedParticipants) {
				const userName = event.logMessageData.addedParticipants[id].fullName;
				nameArray.push(userName);
				mentions.push({ tag: userName, id });
				memLength.push(participantIDs.length - i++);
			}
			memLength.sort((a, b) => a - b);
			
			(typeof threadData.customJoin == "undefined") ? msg = "üíóùôÉùôöùô°ùô°ùô§ ùôòùô§ùô£ ùô´ùô§ÃõÃ£ {name}üíó \nüê≥ùòæùôùùôñÃÄùô§ ùô¢ùô™ÃõÃÄùô£ùôú ƒëùôñÃÉ ƒëùôöÃÇÃÅùô£ ùô´ùô§ÃõÃÅùôû {threadName}\n{type} ùô°ùôñÃÄ ùô©ùôùùôñÃÄùô£ùôù ùô´ùôûùôöÃÇùô£ ùô©ùôùùô™ÃõÃÅ {soThanhVien} ùôòùô™Ãâùôñ ùô£ùôùùô§ÃÅùô¢. ùôèùô™Ãõùô§Ãõùô£ùôú ùô©ùôñÃÅùôò ùô£ùôùùôûùôöÃÇÃÄùô™ ùô´ùôñÃÄùô§ ùô£ùôùùôñ ùô†ùôùùô§ÃÇùô£ùôú ùô°ùôñÃÄ ùôñÃÜùô£ ùô†ùôûùôòùô† ƒëùôñÃÇÃÅùôÆ üçÄ" : msg = threadData.customJoin;
			msg = msg
			.replace(/\{name}/g, nameArray.join(', '))
			.replace(/\{type}/g, (memLength.length > 1) ?  'c√°c b·∫°n' : 'b·∫°n')
			.replace(/\{soThanhVien}/g, memLength.join(', '))
			.replace(/\{threadName}/g, threadName);

			if (existsSync(path)) mkdirSync(path, { recursive: true });

			const randomPath = readdirSync(join(__dirname, "cache", "joinMp4", "hi.mp4"));

			if (existsSync(pathGif)) formPush = { body: msg, attachment: createReadStream(pathGif), mentions }
			else if (randomPath.length != 0) {
				const pathRandom = join(__dirname, "cache", "joinMp4", "hi.mp4", `${randomPath[Math.floor(Math.random() * randomPath.length)]}`);
				formPush = { body: msg, attachment: createReadStream(pathRandom), mentions }
			}
			else formPush = { body: msg, mentions }

			return api.sendMessage(formPush, threadID);
		} catch (e) { return console.log(e) };
	}
}